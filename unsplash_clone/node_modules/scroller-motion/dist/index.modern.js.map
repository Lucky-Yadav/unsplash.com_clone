{"version":3,"file":"index.modern.js","sources":["../src/context.ts","../src/hooks/useCore/useAxis.ts","../src/hooks/useCore/useSize.ts","../src/hooks/useScrollerMotion.ts","../src/components/Core/Wrap.tsx","../src/components/Core/index.tsx","../src/hooks/useCore/index.ts","../src/hooks/useCore/useWindowSize.ts","../src/hooks/useCore/useSpringScroll.ts"],"sourcesContent":["import { createContext } from 'react'\n\nimport { ScrollerMotionValues } from './types'\n\nexport const Context = createContext<ScrollerMotionValues | undefined>(\n  undefined\n)\n","import { useMemo } from 'react'\nimport { useTransform } from 'framer-motion'\n\nimport { MotionValue } from '../../types'\n\ninterface Options {\n  axisSpring: MotionValue\n  scale: number\n  refSize: number\n  windowSize: number\n}\n\nexport const useAxis = ({\n  axisSpring,\n  scale,\n  refSize,\n  windowSize\n}: Options) => {\n  const scaledSize = useMemo(\n    () => (refSize > windowSize ? refSize * scale : refSize),\n    [refSize, scale, windowSize]\n  )\n\n  const transformFrom = useMemo(\n    () => [0, scaledSize - windowSize],\n    [scaledSize, windowSize]\n  )\n  const transformTo = useMemo(\n    () => [0, (refSize - windowSize) * -1],\n    [refSize, windowSize]\n  )\n\n  const axis = useTransform(axisSpring, transformFrom, transformTo, {\n    clamp: false\n  })\n\n  return {\n    axis,\n    size: scaledSize\n  }\n}\n","import { useEffect, useState } from 'react'\nimport debounceFn from 'debounce-fn'\n\nimport { ChildrenRef } from '../../types'\n\nconst getSize = (el: HTMLElement | null) => ({\n  height: el?.scrollHeight ?? 0,\n  width: el?.scrollWidth ?? 0\n})\n\nconst supportsResizeObserver = typeof ResizeObserver === 'function'\n\nexport const useSize = (ref: ChildrenRef) => {\n  const [size, setSize] = useState({ height: 0, width: 0 })\n\n  useEffect(() => {\n    const onResize = () => setSize(getSize(ref.current))\n    const debouncedOnResize = debounceFn(onResize, { wait: 400 })\n    let resizeObserver: ResizeObserver | null = null\n\n    if (ref.current) {\n      onResize()\n      window.addEventListener('resize', debouncedOnResize)\n\n      if (supportsResizeObserver) {\n        resizeObserver = new ResizeObserver(onResize)\n        resizeObserver.observe(ref.current)\n      }\n    }\n\n    return () => {\n      window.removeEventListener('resize', debouncedOnResize)\n\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n      }\n    }\n  }, [])\n\n  return size\n}\n","import { useContext } from 'react'\n\nimport { Context } from '../context'\n\nexport const useScrollerMotion = () => {\n  const context = useContext(Context)\n\n  if (context === undefined) {\n    throw new Error('useScrollerMotion must be used within ScrollerMotion')\n  }\n\n  return context\n}\n","import { FC, useMemo } from 'react'\nimport { motion } from 'framer-motion'\n\nimport { ChildrenRef, DivElementProps, MotionValue } from '../../types'\n\ninterface Props extends DivElementProps {\n  childrenRef: ChildrenRef\n  disabled?: boolean\n  height: number\n  width: number\n  x: MotionValue\n  y: MotionValue\n}\n\nconst FIXED_STYLE = {\n  position: 'fixed',\n  left: 0,\n  top: 0,\n  right: 0,\n  bottom: 0\n}\n\nexport const Wrap: FC<Props> = ({\n  children,\n  childrenRef,\n  disabled,\n  height,\n  style,\n  width,\n  x,\n  y,\n  ...props\n}) => {\n  const outerStyle = useMemo(\n    () => ({ ...style, ...(!disabled ? { height, width } : {}) }),\n    [disabled, height, style, width]\n  )\n  const fixedStyle = useMemo(() => (!disabled ? FIXED_STYLE : {}), [disabled])\n  const motionStyle = useMemo(\n    () => ({ x: !disabled ? x : 0, y: !disabled ? y : 0 }),\n    [disabled, x, y]\n  )\n\n  return (\n    <div {...props} style={outerStyle}>\n      <div style={fixedStyle}>\n        <motion.div style={motionStyle} ref={childrenRef}>\n          {children}\n        </motion.div>\n      </div>\n    </div>\n  )\n}\n","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react'\n\nimport { Context } from '../../context'\nimport { useCore } from '../../hooks'\nimport { CoreProps, CoreRef } from '../../types'\n\nimport { Wrap } from './Wrap'\n\nconst DEFAULT_SCALE = 1\n\nconst DEFAULT_SPRING = {\n  damping: 50,\n  mass: 1.25,\n  stiffness: 200\n}\n\nexport const Core = forwardRef<CoreRef, CoreProps>(\n  (\n    {\n      children,\n      disabled,\n      scale = DEFAULT_SCALE,\n      spring = DEFAULT_SPRING,\n      ...props\n    },\n    ref\n  ) => {\n    const childrenRef = useRef(null)\n\n    const { height, width, scrollX, scrollY, x, y } = useCore({\n      ref: childrenRef,\n      scale,\n      spring\n    })\n\n    useImperativeHandle(ref, () => ({ scrollX, scrollY, x, y }), [\n      scrollX,\n      scrollY,\n      x,\n      y\n    ])\n\n    const contextValue = useMemo(\n      () => ({ scrollX, scrollY, x, y }),\n      [scrollX, scrollY, x, y]\n    )\n\n    return (\n      <Wrap\n        {...props}\n        childrenRef={childrenRef}\n        disabled={disabled}\n        height={height}\n        width={width}\n        x={x}\n        y={y}\n      >\n        <Context.Provider value={contextValue}>{children}</Context.Provider>\n      </Wrap>\n    )\n  }\n)\n\nCore.displayName = 'ScrollerMotion'\n","import { useMemo } from 'react'\n\nimport { ChildrenRef, SpringProp } from '../../types'\n\nimport { useAxis } from './useAxis'\nimport { useSize } from './useSize'\nimport { useSpringScroll } from './useSpringScroll'\nimport { useWindowSize } from './useWindowSize'\n\ninterface Options {\n  ref: ChildrenRef\n  scale: number\n  spring: SpringProp\n}\n\nexport const useCore = ({ ref, scale, spring }: Options) => {\n  const innerScale = useMemo(() => Math.max(1, scale), [scale])\n\n  const { height: windowHeight, width: windowWidth } = useWindowSize()\n  const { height: refHeight, width: refWidth } = useSize(ref)\n\n  const { x: springX, y: springY } = useSpringScroll(spring)\n\n  const { axis: x, size: width } = useAxis({\n    axisSpring: springX,\n    scale: innerScale,\n    refSize: refWidth,\n    windowSize: windowWidth\n  })\n\n  const { axis: y, size: height } = useAxis({\n    axisSpring: springY,\n    scale: innerScale,\n    refSize: refHeight,\n    windowSize: windowHeight\n  })\n\n  return { height, width, scrollX: springX, scrollY: springY, x, y }\n}\n","import { useEffect, useState } from 'react'\n\nconst getWindowSize = () => ({\n  width:\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth,\n  height:\n    window.innerHeight ||\n    document.documentElement.clientHeight ||\n    document.body.clientHeight\n})\n\nexport const useWindowSize = () => {\n  const [size, setSize] = useState({ height: 0, width: 0 })\n\n  useEffect(() => {\n    const onResize = () => setSize(getWindowSize())\n\n    onResize()\n    window.addEventListener('resize', onResize, false)\n\n    return () => window.removeEventListener('resize', onResize, false)\n  }, [])\n\n  return size\n}\n","import { useSpring, useViewportScroll } from 'framer-motion'\n\nimport { MotionValue, SpringProp, SpringOptions } from '../../types'\n\nexport const useSpringScroll = (springConfig: SpringProp) => {\n  const { scrollX, scrollY } = useViewportScroll()\n\n  const config = typeof springConfig === 'object' ? springConfig : undefined\n  const springX: MotionValue<number> = useSpring(\n    scrollX,\n    config as SpringOptions\n  )\n  const springY: MotionValue<number> = useSpring(\n    scrollY,\n    config as SpringOptions\n  )\n\n  return {\n    x: config ? springX : scrollX,\n    y: config ? springY : scrollY\n  }\n}\n"],"names":["Context","createContext","undefined","useAxis","axisSpring","scale","refSize","windowSize","scaledSize","useMemo","transformFrom","transformTo","axis","useTransform","clamp","size","supportsResizeObserver","ResizeObserver","useScrollerMotion","context","useContext","Error","FIXED_STYLE","position","left","top","right","bottom","Wrap","_ref","children","childrenRef","disabled","height","style","width","x","y","props","outerStyle","fixedStyle","motionStyle","_jsx","_extends","motion","div","ref","DEFAULT_SCALE","DEFAULT_SPRING","damping","mass","stiffness","Core","forwardRef","spring","_objectWithoutPropertiesLoose","_excluded","useRef","scrollX","scrollY","innerScale","Math","max","windowHeight","windowWidth","setSize","useState","useEffect","onResize","window","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","addEventListener","removeEventListener","useWindowSize","refHeight","refWidth","el","current","scrollHeight","scrollWidth","_el$scrollHeight","_el$scrollWidth","debouncedOnResize","debounceFn","wait","resizeObserver","observe","disconnect","useSize","springX","springY","springConfig","useViewportScroll","config","useSpring","useSpringScroll","useCore","useImperativeHandle","contextValue","Provider","value","displayName"],"mappings":"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"}